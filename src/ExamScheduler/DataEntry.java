/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ExamScheduler;

import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.poifs.filesystem.POIFSFileSystem;
import org.apache.poi.ss.usermodel.Row;
import com.mysql.jdbc.PreparedStatement;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Iterator;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.ss.usermodel.Cell;
    import org.apache.poi.ss.usermodel.DataFormatter;
    import org.apache.poi.ss.usermodel.Row;
    import org.apache.poi.ss.usermodel.Sheet;



/**
 *
 * @author christendsouza
 */
public class DataEntry extends javax.swing.JFrame {
    int flag=0;

    /**
     * Creates new form DataEntry
     */
    public DataEntry() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        jViewDB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jStudentInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        StudentButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        StudentEntry = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        StudentDelete = new javax.swing.JButton();
        StudentAll = new javax.swing.JButton();
        StudentText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        Count = new javax.swing.JButton();
        jStudentInternalFrame2 = new javax.swing.JInternalFrame();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        FacultyButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        FacultyEntry = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        FacultyText = new javax.swing.JTextField();
        FacultyDelete = new javax.swing.JButton();
        FacultyAll = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jStudentInternalFrame3 = new javax.swing.JInternalFrame();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        DeptButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        DeptEntry = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        DeptDelete = new javax.swing.JButton();
        DeptText = new javax.swing.JTextField();
        DeptAll = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jStudentInternalFrame4 = new javax.swing.JInternalFrame();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        SubjectButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        SubjectEntry = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        SubjectText = new javax.swing.JTextField();
        SubjectDelete = new javax.swing.JButton();
        SubjectAll = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jStudentInternalFrame5 = new javax.swing.JInternalFrame();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        ClassButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        ClassEntry = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        ClassText = new javax.swing.JTextField();
        ClassDelete = new javax.swing.JButton();
        ClassAll = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ExamScheduler.ExamSchedulerApp.class).getContext().getResourceMap(DataEntry.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N

        Title.setFont(resourceMap.getFont("Title.font")); // NOI18N
        Title.setText(resourceMap.getString("Title.text")); // NOI18N
        Title.setName("Title"); // NOI18N

        jViewDB.setBackground(resourceMap.getColor("jViewDB.background")); // NOI18N
        jViewDB.setFont(resourceMap.getFont("jViewDB.font")); // NOI18N
        jViewDB.setText(resourceMap.getString("jViewDB.text")); // NOI18N
        jViewDB.setName("jViewDB"); // NOI18N
        jViewDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jViewDBActionPerformed(evt);
            }
        });

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jStudentInternalFrame1.setBackground(resourceMap.getColor("jStudentInternalFrame1.background")); // NOI18N
        jStudentInternalFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jStudentInternalFrame1.setTitle(resourceMap.getString("jStudentInternalFrame1.title")); // NOI18N
        jStudentInternalFrame1.setName("jStudentInternalFrame1"); // NOI18N
        jStudentInternalFrame1.setVisible(true);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        StudentButton.setText(resourceMap.getString("StudentButton.text")); // NOI18N
        StudentButton.setName("StudentButton"); // NOI18N
        StudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        StudentEntry.setColumns(20);
        StudentEntry.setRows(5);
        StudentEntry.setName("StudentEntry"); // NOI18N
        jScrollPane1.setViewportView(StudentEntry);

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        StudentDelete.setText(resourceMap.getString("StudentDelete.text")); // NOI18N
        StudentDelete.setName("StudentDelete"); // NOI18N
        StudentDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentDeleteActionPerformed(evt);
            }
        });

        StudentAll.setText(resourceMap.getString("StudentAll.text")); // NOI18N
        StudentAll.setName("StudentAll"); // NOI18N
        StudentAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentAllActionPerformed(evt);
            }
        });

        StudentText.setText(resourceMap.getString("StudentText.text")); // NOI18N
        StudentText.setName("StudentText"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Count.setText(resourceMap.getString("Count.text")); // NOI18N
        Count.setName("Count"); // NOI18N
        Count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CountActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jStudentInternalFrame1Layout = new org.jdesktop.layout.GroupLayout(jStudentInternalFrame1.getContentPane());
        jStudentInternalFrame1.getContentPane().setLayout(jStudentInternalFrame1Layout);
        jStudentInternalFrame1Layout.setHorizontalGroup(
            jStudentInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jStudentInternalFrame1Layout.createSequentialGroup()
                .add(jStudentInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jStudentInternalFrame1Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(StudentButton))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .add(jStudentInternalFrame1Layout.createSequentialGroup()
                        .add(jStudentInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jStudentInternalFrame1Layout.createSequentialGroup()
                                .add(15, 15, 15)
                                .add(jLabel3))
                            .add(jStudentInternalFrame1Layout.createSequentialGroup()
                                .add(14, 14, 14)
                                .add(jStudentInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jButton1)
                                    .add(jStudentInternalFrame1Layout.createSequentialGroup()
                                        .add(12, 12, 12)
                                        .add(StudentDelete)
                                        .add(18, 18, 18)
                                        .add(StudentAll))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame1Layout.createSequentialGroup()
                                        .add(Count)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jStudentInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jStudentInternalFrame1Layout.createSequentialGroup()
                                                .add(6, 6, 6)
                                                .add(StudentText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(jLabel8))
                                        .add(43, 43, 43)))))
                        .add(0, 7, Short.MAX_VALUE)))
                .addContainerGap())
            .add(jStudentInternalFrame1Layout.createSequentialGroup()
                .add(65, 65, 65)
                .add(jLabel2)
                .add(0, 0, Short.MAX_VALUE))
            .add(jStudentInternalFrame1Layout.createSequentialGroup()
                .add(51, 51, 51)
                .add(jLabel6)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jStudentInternalFrame1Layout.setVerticalGroup(
            jStudentInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jStudentInternalFrame1Layout.createSequentialGroup()
                .add(43, 43, 43)
                .add(jLabel2)
                .add(18, 18, 18)
                .add(jLabel3)
                .add(12, 12, 12)
                .add(jLabel6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 164, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jStudentInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(StudentButton)
                    .add(jButton1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jStudentInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel8)
                    .add(Count))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(StudentText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jStudentInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(StudentDelete)
                    .add(StudentAll))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jStudentInternalFrame2.setBackground(resourceMap.getColor("jStudentInternalFrame2.background")); // NOI18N
        jStudentInternalFrame2.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jStudentInternalFrame2.setTitle(resourceMap.getString("jStudentInternalFrame2.title")); // NOI18N
        jStudentInternalFrame2.setName("jStudentInternalFrame2"); // NOI18N
        jStudentInternalFrame2.setVisible(true);

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jLabel10.setFont(resourceMap.getFont("jLabel10.font")); // NOI18N
        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        FacultyButton.setText(resourceMap.getString("FacultyButton.text")); // NOI18N
        FacultyButton.setName("FacultyButton"); // NOI18N
        FacultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FacultyButtonActionPerformed(evt);
            }
        });

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        FacultyEntry.setColumns(20);
        FacultyEntry.setRows(5);
        FacultyEntry.setName("FacultyEntry"); // NOI18N
        jScrollPane3.setViewportView(FacultyEntry);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        FacultyText.setName("FacultyText"); // NOI18N

        FacultyDelete.setText(resourceMap.getString("FacultyDelete.text")); // NOI18N
        FacultyDelete.setName("FacultyDelete"); // NOI18N
        FacultyDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FacultyDeleteActionPerformed(evt);
            }
        });

        FacultyAll.setText(resourceMap.getString("FacultyAll.text")); // NOI18N
        FacultyAll.setName("FacultyAll"); // NOI18N
        FacultyAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FacultyAllActionPerformed(evt);
            }
        });

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jStudentInternalFrame2Layout = new org.jdesktop.layout.GroupLayout(jStudentInternalFrame2.getContentPane());
        jStudentInternalFrame2.getContentPane().setLayout(jStudentInternalFrame2Layout);
        jStudentInternalFrame2Layout.setHorizontalGroup(
            jStudentInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jStudentInternalFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .add(FacultyDelete)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(FacultyAll)
                .addContainerGap())
            .add(jStudentInternalFrame2Layout.createSequentialGroup()
                .add(jStudentInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(jStudentInternalFrame2Layout.createSequentialGroup()
                        .add(jStudentInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jStudentInternalFrame2Layout.createSequentialGroup()
                                .add(30, 30, 30)
                                .add(jLabel10))
                            .add(jStudentInternalFrame2Layout.createSequentialGroup()
                                .add(46, 46, 46)
                                .add(jLabel4))
                            .add(jStudentInternalFrame2Layout.createSequentialGroup()
                                .addContainerGap()
                                .add(jButton2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(FacultyButton)))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .add(jStudentInternalFrame2Layout.createSequentialGroup()
                .add(63, 63, 63)
                .add(jLabel9)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame2Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jStudentInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel11)
                    .add(FacultyText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(50, 50, 50))
        );
        jStudentInternalFrame2Layout.setVerticalGroup(
            jStudentInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jStudentInternalFrame2Layout.createSequentialGroup()
                .add(43, 43, 43)
                .add(jLabel9)
                .add(18, 18, 18)
                .add(jLabel10)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 164, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jStudentInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(FacultyButton)
                    .add(jButton2))
                .add(18, 18, 18)
                .add(jLabel11)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(FacultyText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jStudentInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(FacultyDelete)
                    .add(FacultyAll))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jStudentInternalFrame3.setBackground(resourceMap.getColor("jStudentInternalFrame3.background")); // NOI18N
        jStudentInternalFrame3.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jStudentInternalFrame3.setTitle(resourceMap.getString("jStudentInternalFrame3.title")); // NOI18N
        jStudentInternalFrame3.setName("jStudentInternalFrame3"); // NOI18N
        jStudentInternalFrame3.setVisible(true);

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        jLabel13.setFont(resourceMap.getFont("jLabel13.font")); // NOI18N
        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        DeptButton.setText(resourceMap.getString("DeptButton.text")); // NOI18N
        DeptButton.setName("DeptButton"); // NOI18N
        DeptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeptButtonActionPerformed(evt);
            }
        });

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        DeptEntry.setColumns(20);
        DeptEntry.setRows(5);
        DeptEntry.setName("DeptEntry"); // NOI18N
        jScrollPane4.setViewportView(DeptEntry);

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        DeptDelete.setText(resourceMap.getString("DeptDelete.text")); // NOI18N
        DeptDelete.setName("DeptDelete"); // NOI18N
        DeptDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeptDeleteActionPerformed(evt);
            }
        });

        DeptText.setText(resourceMap.getString("DeptText.text")); // NOI18N
        DeptText.setName("DeptText"); // NOI18N

        DeptAll.setText(resourceMap.getString("DeptAll.text")); // NOI18N
        DeptAll.setName("DeptAll"); // NOI18N
        DeptAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeptAllActionPerformed(evt);
            }
        });

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jStudentInternalFrame3Layout = new org.jdesktop.layout.GroupLayout(jStudentInternalFrame3.getContentPane());
        jStudentInternalFrame3.getContentPane().setLayout(jStudentInternalFrame3Layout);
        jStudentInternalFrame3Layout.setHorizontalGroup(
            jStudentInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jStudentInternalFrame3Layout.createSequentialGroup()
                .add(jStudentInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jStudentInternalFrame3Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .add(jStudentInternalFrame3Layout.createSequentialGroup()
                        .add(79, 79, 79)
                        .add(jLabel13)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .add(jStudentInternalFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jStudentInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame3Layout.createSequentialGroup()
                        .add(jButton3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(DeptButton)
                        .add(0, 11, Short.MAX_VALUE))
                    .add(jStudentInternalFrame3Layout.createSequentialGroup()
                        .add(DeptDelete)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(DeptAll)
                        .addContainerGap())))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame3Layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(jStudentInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jStudentInternalFrame3Layout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(DeptText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jStudentInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame3Layout.createSequentialGroup()
                            .add(jLabel12)
                            .add(64, 64, 64))
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame3Layout.createSequentialGroup()
                            .add(jLabel14)
                            .add(47, 47, 47)))))
        );
        jStudentInternalFrame3Layout.setVerticalGroup(
            jStudentInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jStudentInternalFrame3Layout.createSequentialGroup()
                .add(44, 44, 44)
                .add(jLabel12)
                .add(18, 18, 18)
                .add(jLabel13)
                .add(33, 33, 33)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 164, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jStudentInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(DeptButton)
                    .add(jButton3))
                .add(18, 18, 18)
                .add(jLabel14)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(DeptText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 14, Short.MAX_VALUE)
                .add(jStudentInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(DeptDelete)
                    .add(DeptAll))
                .add(26, 26, 26))
        );

        jStudentInternalFrame4.setBackground(resourceMap.getColor("jStudentInternalFrame4.background")); // NOI18N
        jStudentInternalFrame4.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jStudentInternalFrame4.setTitle(resourceMap.getString("jStudentInternalFrame4.title")); // NOI18N
        jStudentInternalFrame4.setName("jStudentInternalFrame4"); // NOI18N
        jStudentInternalFrame4.setVisible(true);

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        jLabel16.setFont(resourceMap.getFont("jLabel16.font")); // NOI18N
        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        SubjectButton.setText(resourceMap.getString("SubjectButton.text")); // NOI18N
        SubjectButton.setName("SubjectButton"); // NOI18N
        SubjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubjectButtonActionPerformed(evt);
            }
        });

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        SubjectEntry.setColumns(20);
        SubjectEntry.setRows(5);
        SubjectEntry.setName("SubjectEntry"); // NOI18N
        jScrollPane5.setViewportView(SubjectEntry);

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N

        SubjectText.setName("SubjectText"); // NOI18N

        SubjectDelete.setText(resourceMap.getString("SubjectDelete.text")); // NOI18N
        SubjectDelete.setName("SubjectDelete"); // NOI18N
        SubjectDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubjectDeleteActionPerformed(evt);
            }
        });

        SubjectAll.setText(resourceMap.getString("SubjectAll.text")); // NOI18N
        SubjectAll.setName("SubjectAll"); // NOI18N
        SubjectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubjectAllActionPerformed(evt);
            }
        });

        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jStudentInternalFrame4Layout = new org.jdesktop.layout.GroupLayout(jStudentInternalFrame4.getContentPane());
        jStudentInternalFrame4.getContentPane().setLayout(jStudentInternalFrame4Layout);
        jStudentInternalFrame4Layout.setHorizontalGroup(
            jStudentInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jStudentInternalFrame4Layout.createSequentialGroup()
                .add(jStudentInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jStudentInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(jStudentInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jStudentInternalFrame4Layout.createSequentialGroup()
                                .add(73, 73, 73)
                                .add(jLabel15))
                            .add(jStudentInternalFrame4Layout.createSequentialGroup()
                                .add(35, 35, 35)
                                .add(SubjectDelete)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(SubjectAll))
                            .add(jStudentInternalFrame4Layout.createSequentialGroup()
                                .add(58, 58, 58)
                                .add(jStudentInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jStudentInternalFrame4Layout.createSequentialGroup()
                                        .add(6, 6, 6)
                                        .add(SubjectText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jLabel17)))
                            .add(jStudentInternalFrame4Layout.createSequentialGroup()
                                .addContainerGap()
                                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 234, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(jStudentInternalFrame4Layout.createSequentialGroup()
                            .add(15, 15, 15)
                            .add(jButton4)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(SubjectButton)))
                    .add(jStudentInternalFrame4Layout.createSequentialGroup()
                        .add(64, 64, 64)
                        .add(jLabel16))
                    .add(jStudentInternalFrame4Layout.createSequentialGroup()
                        .add(43, 43, 43)
                        .add(jLabel5)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jStudentInternalFrame4Layout.setVerticalGroup(
            jStudentInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jStudentInternalFrame4Layout.createSequentialGroup()
                .add(44, 44, 44)
                .add(jLabel15)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel16)
                .add(7, 7, 7)
                .add(jLabel5)
                .add(18, 18, 18)
                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 164, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jStudentInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(SubjectButton)
                    .add(jButton4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel17)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(SubjectText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jStudentInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(SubjectDelete)
                    .add(SubjectAll))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jStudentInternalFrame5.setBackground(resourceMap.getColor("jStudentInternalFrame5.background")); // NOI18N
        jStudentInternalFrame5.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jStudentInternalFrame5.setTitle(resourceMap.getString("jStudentInternalFrame5.title")); // NOI18N
        jStudentInternalFrame5.setName("jStudentInternalFrame5"); // NOI18N
        jStudentInternalFrame5.setVisible(true);

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        jLabel19.setFont(resourceMap.getFont("jLabel19.font")); // NOI18N
        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        ClassButton.setText(resourceMap.getString("ClassButton.text")); // NOI18N
        ClassButton.setName("ClassButton"); // NOI18N
        ClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassButtonActionPerformed(evt);
            }
        });

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        ClassEntry.setColumns(20);
        ClassEntry.setRows(5);
        ClassEntry.setName("ClassEntry"); // NOI18N
        jScrollPane6.setViewportView(ClassEntry);

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N

        ClassText.setText(resourceMap.getString("ClassText.text")); // NOI18N
        ClassText.setName("ClassText"); // NOI18N

        ClassDelete.setText(resourceMap.getString("ClassDelete.text")); // NOI18N
        ClassDelete.setName("ClassDelete"); // NOI18N
        ClassDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassDeleteActionPerformed(evt);
            }
        });

        ClassAll.setText(resourceMap.getString("ClassAll.text")); // NOI18N
        ClassAll.setName("ClassAll"); // NOI18N
        ClassAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassAllActionPerformed(evt);
            }
        });

        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jStudentInternalFrame5Layout = new org.jdesktop.layout.GroupLayout(jStudentInternalFrame5.getContentPane());
        jStudentInternalFrame5.getContentPane().setLayout(jStudentInternalFrame5Layout);
        jStudentInternalFrame5Layout.setHorizontalGroup(
            jStudentInternalFrame5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame5Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jStudentInternalFrame5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame5Layout.createSequentialGroup()
                        .add(ClassDelete)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(ClassAll)
                        .add(30, 30, 30))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame5Layout.createSequentialGroup()
                        .add(jLabel7)
                        .add(37, 37, 37))))
            .add(jStudentInternalFrame5Layout.createSequentialGroup()
                .add(jStudentInternalFrame5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jStudentInternalFrame5Layout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(jStudentInternalFrame5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton5)
                            .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 227, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jStudentInternalFrame5Layout.createSequentialGroup()
                        .add(57, 57, 57)
                        .add(jLabel19)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(jStudentInternalFrame5Layout.createSequentialGroup()
                .add(71, 71, 71)
                .add(jLabel18)
                .add(0, 0, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame5Layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(jStudentInternalFrame5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame5Layout.createSequentialGroup()
                        .add(ClassButton)
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame5Layout.createSequentialGroup()
                        .add(jStudentInternalFrame5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jStudentInternalFrame5Layout.createSequentialGroup()
                                .add(6, 6, 6)
                                .add(ClassText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 131, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLabel20))
                        .add(47, 47, 47))))
        );
        jStudentInternalFrame5Layout.setVerticalGroup(
            jStudentInternalFrame5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jStudentInternalFrame5Layout.createSequentialGroup()
                .add(44, 44, 44)
                .add(jLabel18)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel19)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel7)
                .add(18, 18, 18)
                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 163, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jStudentInternalFrame5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ClassButton)
                    .add(jButton5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel20)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(ClassText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jStudentInternalFrame5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ClassDelete)
                    .add(ClassAll))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jButton6.setBackground(resourceMap.getColor("jButton6.background")); // NOI18N
        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(jStudentInternalFrame1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jStudentInternalFrame2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jStudentInternalFrame3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jStudentInternalFrame4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(36, 36, 36)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(Title))
                        .add(193, 193, 193)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jStudentInternalFrame5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(42, 42, 42)
                        .add(jViewDB))
                    .add(layout.createSequentialGroup()
                        .add(75, 75, 75)
                        .add(jButton6)))
                .addContainerGap(4533, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(63, 63, 63)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(Title)
                    .add(jViewDB))
                .add(27, 27, 27)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jButton6))
                .add(47, 47, 47)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jStudentInternalFrame2)
                    .add(jStudentInternalFrame3)
                    .add(jStudentInternalFrame4)
                    .add(jStudentInternalFrame5))
                .addContainerGap(837, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentButtonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==StudentButton){int m=0;
        flag=0;
					String s_name=StudentEntry.getText();
                                        int a=s_name.lastIndexOf(',');
                                                a=a-9;
                                                int x=Integer.valueOf(s_name.substring(a,a+2));
                                                if(x<75){m=1;flag=1;JOptionPane.showMessageDialog(null, "NSAR!");}
                                                a=a+3;
                                                int y=Integer.valueOf(s_name.substring(a,a+2));
                                                if(y<40){m=0;flag=1;JOptionPane.showMessageDialog(null, "NSSR!");}
                                        
                                        
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                if(flag==1){
                                                    if(m==1){
                                                    String sqlQuery = "insert into Status values(1,0,0,'"+s_name.substring(1,7)+"')";
                                                st.executeUpdate(sqlQuery);}
                                                    else{
                                                        String sqlQuery = "insert into Status values(0,1,0,'"+s_name.substring(1,7)+"')";
                                                st.executeUpdate(sqlQuery);
                                                    }
                                                }
                                                else{
                                                String sqlQuery = "insert into Student values ("+s_name+")";
                                                st.executeUpdate(sqlQuery);
                                                }
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
                                        }
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Please insert the values with proper quotation marks.");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                                              
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Insert successful.");
        }
    }//GEN-LAST:event_StudentButtonActionPerformed

    private void FacultyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FacultyButtonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==FacultyButton){
					String s_name=FacultyEntry.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "insert into Faculty values ("+s_name+")";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Please insert the values with proper quotation marks.");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Insert successful.");
        }
    }//GEN-LAST:event_FacultyButtonActionPerformed

    private void DeptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeptButtonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==DeptButton){
					String s_name=DeptEntry.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "insert into Department values ("+s_name+")";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Please insert the values with proper quotation marks.");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Insert successful.");
        }
    }//GEN-LAST:event_DeptButtonActionPerformed

    private void SubjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubjectButtonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==SubjectButton){
					String s_name=SubjectEntry.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "insert into Subject values ("+s_name+")";
                                                st.executeUpdate(sqlQuery);
                                                cn.close();
						
						
						//if(flag==0)
						//{
							
						//}
						//cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Please insert the values with proper quotation marks.");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Insert successful.");
        }
    }//GEN-LAST:event_SubjectButtonActionPerformed

    private void ClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassButtonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==ClassButton){
					String s_name=ClassEntry.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "insert into Class values ("+s_name+")";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Please insert the values with proper quotation marks.");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Insert successful.");
        }
    }//GEN-LAST:event_ClassButtonActionPerformed

    private void StudentDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentDeleteActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==StudentDelete){
					String s_name=StudentText.getText();
                                        flag=0;
                                        try
					{
                                            
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&verifyServerCertificate=false&useSSL=true";
						
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "delete from Student where USN='"+s_name+"'";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Please insert an existing USN.");
                                            //JOptionPane.showMessageDialog(null, s_name);
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Delete successful.");
        }
    }//GEN-LAST:event_StudentDeleteActionPerformed

    private void StudentAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentAllActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==StudentAll){
					//String s_name=StudentText.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "delete from Student";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Connection unsuccessful!");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Delete all successful.");
        }
    }//GEN-LAST:event_StudentAllActionPerformed

    private void FacultyDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FacultyDeleteActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==FacultyDelete){
					String s_name=FacultyText.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "delete from Faculty where FID='"+s_name+"'";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Please insert an existing FID.");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Delete successful.");
        }
    }//GEN-LAST:event_FacultyDeleteActionPerformed

    private void DeptDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeptDeleteActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==DeptDelete){
					String s_name=DeptText.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "delete from Department where DName='"+s_name+"'";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Please insert an existing DName.");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Delete successful.");
        }
    }//GEN-LAST:event_DeptDeleteActionPerformed

    private void SubjectDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubjectDeleteActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==SubjectDelete){
					String s_name=SubjectText.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "delete from Subject where SCode='"+s_name+"'";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Please insert an existing SCode.");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Delete successful.");
        }
    }//GEN-LAST:event_SubjectDeleteActionPerformed

    private void ClassDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassDeleteActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==ClassDelete){
					String s_name=ClassText.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "delete from Class where RoomNo='"+s_name+"'";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Please insert an existing RoomNo.");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Delete successful.");
        }
    }//GEN-LAST:event_ClassDeleteActionPerformed

    private void FacultyAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FacultyAllActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==FacultyAll){
					//String s_name=StudentText.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "delete from Faculty";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Connection unsuccessful!");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Delete all successful.");
        }
    }//GEN-LAST:event_FacultyAllActionPerformed

    private void DeptAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeptAllActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==DeptAll){
					//String s_name=StudentText.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "delete from Department";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Connection unsuccessful!");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Delete all successful.");
        }
    }//GEN-LAST:event_DeptAllActionPerformed

    private void SubjectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubjectAllActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==SubjectAll){
					//String s_name=StudentText.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "delete from Subject";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Connection unsuccessful!");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Delete all successful.");
        }
    }//GEN-LAST:event_SubjectAllActionPerformed

    private void ClassAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassAllActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==ClassAll){
					//String s_name=StudentText.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
						DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
						String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true&useSSL=false";
						Connection cn=null;
                                                cn=DriverManager.getConnection(url,"root","210296book");
						Statement st=cn.createStatement();
                                                
                                                String sqlQuery = "delete from Class";
                                                st.executeUpdate(sqlQuery);
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Connection unsuccessful!");
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Delete all successful.");
        }
    }//GEN-LAST:event_ClassAllActionPerformed

    private void jViewDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jViewDBActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==jViewDB){
					//String s_name=StudentText.getText();
                     ViewDB a= new ViewDB();
                     a.main_view();
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        //if(flag==0)
        //{
            //JOptionPane.showMessageDialog(null, "Delete all successful.");
        //}
    }//GEN-LAST:event_jViewDBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename=f.getAbsolutePath();
        int x=0;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
	    String url="jdbc:mysql://localhost:3306/ExamDB";
            Connection cn=null;
            cn=DriverManager.getConnection(url,"root","210296book");
	    Statement st=cn.createStatement();
            PreparedStatement pstm = null ;
            FileInputStream input = new FileInputStream(filename);
            POIFSFileSystem fs = new POIFSFileSystem( input );
            HSSFWorkbook wb = new HSSFWorkbook(fs);
            HSSFSheet sheet = wb.getSheetAt(0);
            Row row;
            flag=0;
            final DataFormatter df = new DataFormatter();
            //final HSSFCell cell = row.getCell(cellIndex);
            //String valueAsString = df.formatCellValue(cell);
            for(int i=0; i<=sheet.getLastRowNum(); i++){x=0;
                row = sheet.getRow(i);
                int sem = Integer.parseInt(df.formatCellValue(row.getCell(2)));
                String usn = df.formatCellValue(row.getCell(0));
                String branch = df.formatCellValue(row.getCell(1));
                int attendance = Integer.parseInt(df.formatCellValue(row.getCell(3)));
                int marks = Integer.parseInt(df.formatCellValue(row.getCell(4)));
                String section = df.formatCellValue(row.getCell(5));
                String name = df.formatCellValue(row.getCell(6));
               
                if(attendance<75){x=1;JOptionPane.showMessageDialog(null, "There is an NSAR in your entry and will be omitted!");
                            String sqlQuery = "insert into Status values(1,0,0,'"+usn+"')";
                                                st.executeUpdate(sqlQuery);
                            
                }
                if(marks<40){x=1;JOptionPane.showMessageDialog(null, "There is an NSSR in your entry and will be omitted!");
                            String sqlQuery = "insert into Status values(0,1,0,'"+usn+"')";
                                                st.executeUpdate(sqlQuery);
                
                }
                if(x==1)continue;
                String sql = "INSERT INTO Student VALUES('"+usn+"','"+branch+"',"+sem+","+attendance+","+marks+",'"+section+"','"+name+"');";
                flag=1;
                pstm = (PreparedStatement) cn.prepareStatement(sql);
                pstm.execute();
                System.out.println("Import rows "+i);
            }
            //int i=0,j=0;
            
            /*Iterator<Row> rowIterator = sheet.iterator();
            while (rowIterator.hasNext()) 
            {
                String a="";
                Row row = rowIterator.next();
                //For each row, iterate through all the columns
                Iterator<Cell> cellIterator = row.cellIterator();
                 
                while (cellIterator.hasNext()) 
                {
                    Cell cell = cellIterator.next();
                    //Check the cell type and format accordingly
                    switch (cell.getCellType()) 
                    {
                        case Cell.CELL_TYPE_NUMERIC:
                            //System.out.print(cell.getNumericCellValue() + "t");
                            a=a+String.valueOf((int)cell.getNumericCellValue())+",";
                            break;
                        case Cell.CELL_TYPE_STRING:
                        case Cell.CELL_TYPE_ERROR:
                        case Cell.CELL_TYPE_BLANK:
                        case Cell.CELL_TYPE_BOOLEAN:
                        case Cell.CELL_TYPE_FORMULA:
                            //System.out.print(cell.getStringCellValue() + "t");
                            a=a+"'"+cell.toString()+"',";
                            break;
                    }
                }
                System.out.println("");
                i++;
                String sql = "INSERT INTO Student VALUES(a);";
                pstm = (PreparedStatement) cn.prepareStatement(sql);
                pstm.execute();
                System.out.println("Import rows "+i);
            }*/
            
            input.close();
            //cn.commit();
            pstm.close();
            cn.close();
            input.close();
            if(flag==1)
            JOptionPane.showMessageDialog(null, "Success import excel to mysql table");
        }catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null,e);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,ex);
        }catch(IOException ioe){
            JOptionPane.showMessageDialog(null,ioe);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename=f.getAbsolutePath();
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
	    String url="jdbc:mysql://localhost:3306/ExamDB";
            Connection cn=null;
            cn=DriverManager.getConnection(url,"root","210296book");
	    Statement st=cn.createStatement();
            PreparedStatement pstm = null ;
            FileInputStream input = new FileInputStream(filename);
            POIFSFileSystem fs = new POIFSFileSystem( input );
            HSSFWorkbook wb = new HSSFWorkbook(fs);
            HSSFSheet sheet = wb.getSheetAt(0);
            Row row;
            final DataFormatter df = new DataFormatter();
            //final HSSFCell cell = row.getCell(cellIndex);
            //String valueAsString = df.formatCellValue(cell);
            for(int i=0; i<=sheet.getLastRowNum(); i++){
                row = sheet.getRow(i);
                int assigned = Integer.parseInt(df.formatCellValue(row.getCell(3)));
                String FID = df.formatCellValue(row.getCell(0));
                String Type = df.formatCellValue(row.getCell(1));
                String Dept = df.formatCellValue(row.getCell(6));
                int present = Integer.parseInt(df.formatCellValue(row.getCell(4)));
                String Fname = df.formatCellValue(row.getCell(2));
                String gender = df.formatCellValue(row.getCell(5));
                String sql = "INSERT INTO Faculty VALUES('"+FID+"','"+Type+"','"+Fname+"',"+assigned+","+present+",'"+gender+"','"+Dept+"');";
                pstm = (PreparedStatement) cn.prepareStatement(sql);
                pstm.execute();
                System.out.println("Import rows "+i);
            }
            input.close();
            //cn.commit();
            pstm.close();
            cn.close();
            input.close();
            JOptionPane.showMessageDialog(null, "Success import excel to mysql table");
        }catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null,e);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,ex);
        }catch(IOException ioe){
            JOptionPane.showMessageDialog(null,ioe);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename=f.getAbsolutePath();
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
	    String url="jdbc:mysql://localhost:3306/ExamDB";
            Connection cn=null;
            cn=DriverManager.getConnection(url,"root","210296book");
	    Statement st=cn.createStatement();
            PreparedStatement pstm = null ;
            FileInputStream input = new FileInputStream(filename);
            POIFSFileSystem fs = new POIFSFileSystem( input );
            HSSFWorkbook wb = new HSSFWorkbook(fs);
            HSSFSheet sheet = wb.getSheetAt(0);
            Row row;
            final DataFormatter df = new DataFormatter();
            //final HSSFCell cell = row.getCell(cellIndex);
            //String valueAsString = df.formatCellValue(cell);
            for(int i=0; i<=sheet.getLastRowNum(); i++){
                row = sheet.getRow(i);
                int DNo = Integer.parseInt(df.formatCellValue(row.getCell(1)));
                String DName = df.formatCellValue(row.getCell(0));
                
                String sql = "INSERT INTO Department VALUES('"+DName+"',"+DNo+")";
                pstm = (PreparedStatement) cn.prepareStatement(sql);
                pstm.execute();
                System.out.println("Import rows "+i);
            }
            input.close();
            //cn.commit();
            pstm.close();
            cn.close();
            input.close();
            JOptionPane.showMessageDialog(null, "Success import excel to mysql table");
        }catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null,e);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,ex);
        }catch(IOException ioe){
            JOptionPane.showMessageDialog(null,ioe);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename=f.getAbsolutePath();
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
	    String url="jdbc:mysql://localhost:3306/ExamDB";
            Connection cn=null;
            cn=DriverManager.getConnection(url,"root","210296book");
	    Statement st=cn.createStatement();
            PreparedStatement pstm = null ;
            FileInputStream input = new FileInputStream(filename);
            POIFSFileSystem fs = new POIFSFileSystem( input );
            HSSFWorkbook wb = new HSSFWorkbook(fs);
            HSSFSheet sheet = wb.getSheetAt(0);
            Row row;
            final DataFormatter df = new DataFormatter();
            //final HSSFCell cell = row.getCell(cellIndex);
            //String valueAsString = df.formatCellValue(cell);
            for(int i=0; i<=sheet.getLastRowNum(); i++){
                row = sheet.getRow(i);
                int sem = Integer.parseInt(df.formatCellValue(row.getCell(2)));
                String SCode = df.formatCellValue(row.getCell(0));
                String day = df.formatCellValue(row.getCell(4));
                String SName = df.formatCellValue(row.getCell(1));
                //Date date;
                String date="2016-01-20";
                if( day.equals("Monday"))
            {
                //String sqlQuery = "select Date from Subject where Day='Monday' limit 1";
                                                //ResultSet rs=st.executeQuery(sqlQuery);
                //date=rs.getDate(6);
                date="2016-01-20";
            }
            else if( day.equals("Tuesday"))
            {
                //String sqlQuery = "select Date from Subject where Day='Monday' limit 1";
                                                //ResultSet rs=st.executeQuery(sqlQuery);
                //date=rs.getDate(6);
                date="2016-01-21";
            }
            else if( day.equals("Wednesday"))
            {
                //String sqlQuery = "select Date from Subject where Day='Monday' limit 1";
                                                //ResultSet rs=st.executeQuery(sqlQuery);
                //date=rs.getDate(6);
                date="2016-01-22";
            }
            else if( day.equals("Thursday"))
            {
                //String sqlQuery = "select Date from Subject where Day='Monday' limit 1";
                                                //ResultSet rs=st.executeQuery(sqlQuery);
                //date=rs.getDate(6);
                date="2016-01-23";
            }
            else if( day.equals("Friday"))
            {
                //String sqlQuery = "select Date from Subject where Day='Monday' limit 1";
                                                //ResultSet rs=st.executeQuery(sqlQuery);
                //date=rs.getDate(6);
                date="2016-01-24";
            }
                int session = Integer.parseInt(df.formatCellValue(row.getCell(5)));
                String branch = df.formatCellValue(row.getCell(3));
                
                
                String sql = "INSERT INTO Subject VALUES('"+SCode+"','"+SName+"',"+sem+",'"+branch+"','"+day+"',"+session+",'"+date+"')";
                pstm = (PreparedStatement) cn.prepareStatement(sql);
                pstm.execute();
                System.out.println("Import rows "+i);
            }
            input.close();
            //cn.commit();
            pstm.close();
            cn.close();
            input.close();
            JOptionPane.showMessageDialog(null, "Success import excel to mysql table");
        }catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null,e);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,ex);
        }catch(IOException ioe){
            JOptionPane.showMessageDialog(null,ioe);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename=f.getAbsolutePath();
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
	    String url="jdbc:mysql://localhost:3306/ExamDB";
            Connection cn=null;
            cn=DriverManager.getConnection(url,"root","210296book");
	    Statement st=cn.createStatement();
            PreparedStatement pstm = null ;
            FileInputStream input = new FileInputStream(filename);
            POIFSFileSystem fs = new POIFSFileSystem( input );
            HSSFWorkbook wb = new HSSFWorkbook(fs);
            HSSFSheet sheet = wb.getSheetAt(0);
            Row row;
            final DataFormatter df = new DataFormatter();
            //final HSSFCell cell = row.getCell(cellIndex);
            //String valueAsString = df.formatCellValue(cell);
            for(int i=0; i<=sheet.getLastRowNum(); i++){
                row = sheet.getRow(i);
                int ColumnNo = Integer.parseInt(df.formatCellValue(row.getCell(1)));
                String RoomNo = df.formatCellValue(row.getCell(0));
                int RowNo = Integer.parseInt(df.formatCellValue(row.getCell(2)));
                String alloted = df.formatCellValue(row.getCell(3));
                if(!(alloted.equals("0")||alloted.equals("1")))
                    throw new SQLException("Alloted is a boolean value.");
                int capacity = Integer.parseInt(df.formatCellValue(row.getCell(4)));
                
                String sql = "INSERT INTO Class VALUES('"+RoomNo+"',"+ColumnNo+","+RowNo+",'"+alloted+"',"+capacity+")";
                pstm = (PreparedStatement) cn.prepareStatement(sql);
                pstm.execute();
                System.out.println("Import rows "+i);
            }
            input.close();
            //cn.commit();
            pstm.close();
            cn.close();
            input.close();
            JOptionPane.showMessageDialog(null, "Success import excel to mysql table");
        }catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null,e);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,ex);
        }catch(IOException ioe){
            JOptionPane.showMessageDialog(null,ioe);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void CountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CountActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==Count){
					//String s_name=DeptText.getText();
                                        flag=0;
                                        try
					{
						Class.forName("com.mysql.jdbc.Driver");
	    DriverManager.registerDriver(new com.mysql.jdbc.Driver());
					
	    String url="jdbc:mysql://localhost:3306/ExamDB";//?autoReconnect=true&relaxAutoCommit=true";
						
	    Connection cn=null;
            cn=DriverManager.getConnection(url,"root","210296book");
	    Statement st=cn.createStatement();   
                                                
            String sqlQuery = "select count(USN) from Student";

            ResultSet rs=st.executeQuery(sqlQuery);
                                                //ResultSet rs=st.executeQuery(sqlQuery);
            while(rs.next()){
                                                String a=rs.getString(1);
                                                JOptionPane.showMessageDialog(null, "Student count is: "+a);}
                                                //cn.commit();
						
						
						//if(flag==0)
						//{
							
						//}
						cn.close();
					}
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null, "Error: "+e);
                                            flag=1;
                                            e.printStackTrace();
                                        }
                                        
        }
        
        //demo a =new demo();
        //a.main_demo();
        //this.setVisible(false);
        //this.setVisible(true);
        /*if(flag==0)
        {
            JOptionPane.showMessageDialog(null, "Delete successful.");
        }*/
    }//GEN-LAST:event_CountActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main_entry() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
            //public void run() {
                new DataEntry().setVisible(true);
            //}
        //});
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClassAll;
    private javax.swing.JButton ClassButton;
    private javax.swing.JButton ClassDelete;
    private javax.swing.JTextArea ClassEntry;
    private javax.swing.JTextField ClassText;
    private javax.swing.JButton Count;
    private javax.swing.JButton DeptAll;
    private javax.swing.JButton DeptButton;
    private javax.swing.JButton DeptDelete;
    private javax.swing.JTextArea DeptEntry;
    private javax.swing.JTextField DeptText;
    private javax.swing.JButton FacultyAll;
    private javax.swing.JButton FacultyButton;
    private javax.swing.JButton FacultyDelete;
    private javax.swing.JTextArea FacultyEntry;
    private javax.swing.JTextField FacultyText;
    private javax.swing.JButton StudentAll;
    private javax.swing.JButton StudentButton;
    private javax.swing.JButton StudentDelete;
    private javax.swing.JTextArea StudentEntry;
    private javax.swing.JTextField StudentText;
    private javax.swing.JButton SubjectAll;
    private javax.swing.JButton SubjectButton;
    private javax.swing.JButton SubjectDelete;
    private javax.swing.JTextArea SubjectEntry;
    private javax.swing.JTextField SubjectText;
    private javax.swing.JLabel Title;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JInternalFrame jStudentInternalFrame1;
    private javax.swing.JInternalFrame jStudentInternalFrame2;
    private javax.swing.JInternalFrame jStudentInternalFrame3;
    private javax.swing.JInternalFrame jStudentInternalFrame4;
    private javax.swing.JInternalFrame jStudentInternalFrame5;
    private javax.swing.JButton jViewDB;
    // End of variables declaration//GEN-END:variables
}
